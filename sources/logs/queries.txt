IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='Subscription' AND xtype='U') CREATE TABLE Subscription (ID VARCHAR(36), Name VARCHAR(50), LastName VARCHAR(50), Street VARCHAR(50), HouseNumber TINYINT, Postcode VARCHAR(6), City VARCHAR(50) CONSTRAINT PKSubscription PRIMARY KEY (ID));
IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='Profile' AND xtype='U') CREATE TABLE Profile (ProfileName VARCHAR(50), Age TINYINT, ID VARCHAR(36) CONSTRAINT PKProfilePK PRIMARY KEY (ProfileName,ID), CONSTRAINT FKProfileFK FOREIGN KEY (ID) REFERENCES Subscription (ID) ON DELETE CASCADE);
IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='Program' AND xtype='U') CREATE TABLE Program (ID VARCHAR(36), Title VARCHAR(50), Genre VARCHAR(50) CONSTRAINT PKTable PRIMARY KEY (ID));
IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='Movie' AND xtype='U') CREATE TABLE Movie (AgeIndication TINYINT, Duration INT, ID VARCHAR(36) CONSTRAINT PKMovie PRIMARY KEY (ID), CONSTRAINT FKMovie FOREIGN KEY (ID) REFERENCES Program (ID) ON DELETE CASCADE);
IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='Serie' AND xtype='U') CREATE TABLE Serie (ID VARCHAR(36) CONSTRAINT PKSerie PRIMARY KEY (ID), CONSTRAINT FKSerie FOREIGN KEY (ID) REFERENCES Program (ID) ON DELETE CASCADE);
IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='Episode' AND xtype='U') CREATE TABLE Episode (EpisodeNumber INT, Duration INT, NextEpisode INT, ID VARCHAR(36) CONSTRAINT UQEpisode UNIQUE (EpisodeNumber), CONSTRAINT FKEpisode FOREIGN KEY (NextEpisode) REFERENCES Episode (EpisodeNumber), CONSTRAINT FKEpisodeSerie FOREIGN KEY (ID) REFERENCES Serie (ID) ON DELETE CASCADE);
IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='Behaviour' AND xtype='U') CREATE TABLE Behaviour (ProfileName VARCHAR(50), ID VARCHAR(36), ProgramID VARCHAR(36), EpisodeNumber INT, CurrentDuration INT CONSTRAINT PKBehaviour PRIMARY KEY (ID,ProfileName,ProgramID), CONSTRAINT FKBehaviourProfile FOREIGN KEY (ProfileName,ID) REFERENCES Profile (ProfileName,ID) ON DELETE CASCADE, CONSTRAINT FKBehaviourProgram FOREIGN KEY (ProgramID) REFERENCES Program (ID) ON DELETE CASCADE, CONSTRAINT FKBehaviourEpisode FOREIGN KEY (EpisodeNumber) REFERENCES Episode (EpisodeNumber));
IF OBJECT_ID('dbo.PKSubscription', 'C') IS NOT NULL ALTER TABLE dbo.Subscription ADD CONSTRAINT PKSubscription PRIMARY KEY (ID);
IF OBJECT_ID('dbo.PKProfilePK', 'C') IS NOT NULL ALTER TABLE dbo.Profile ADD CONSTRAINT PKProfilePK PRIMARY KEY (ProfileName,ID);
IF OBJECT_ID('dbo.FKProfileFK', 'C') IS NOT NULL ALTER TABLE dbo.Profile ADD CONSTRAINT FKProfileFK FOREIGN KEY (ID) REFERENCES Subscription (ID) ON DELETE CASCADE;
IF OBJECT_ID('dbo.PKTable', 'C') IS NOT NULL ALTER TABLE dbo.Program ADD CONSTRAINT PKTable PRIMARY KEY (ID);
IF OBJECT_ID('dbo.PKMovie', 'C') IS NOT NULL ALTER TABLE dbo.Movie ADD CONSTRAINT PKMovie PRIMARY KEY (ID);
IF OBJECT_ID('dbo.FKMovie', 'C') IS NOT NULL ALTER TABLE dbo.Movie ADD CONSTRAINT FKMovie FOREIGN KEY (ID) REFERENCES Program (ID) ON DELETE CASCADE;
IF OBJECT_ID('dbo.PKSerie', 'C') IS NOT NULL ALTER TABLE dbo.Serie ADD CONSTRAINT PKSerie PRIMARY KEY (ID);
IF OBJECT_ID('dbo.FKSerie', 'C') IS NOT NULL ALTER TABLE dbo.Serie ADD CONSTRAINT FKSerie FOREIGN KEY (ID) REFERENCES Program (ID) ON DELETE CASCADE;
IF OBJECT_ID('dbo.UQEpisode', 'C') IS NOT NULL ALTER TABLE dbo.Episode ADD CONSTRAINT UQEpisode UNIQUE (EpisodeNumber);
IF OBJECT_ID('dbo.FKEpisode', 'C') IS NOT NULL ALTER TABLE dbo.Episode ADD CONSTRAINT FKEpisode FOREIGN KEY (NextEpisode) REFERENCES Episode (EpisodeNumber);
IF OBJECT_ID('dbo.FKEpisodeSerie', 'C') IS NOT NULL ALTER TABLE dbo.Episode ADD CONSTRAINT FKEpisodeSerie FOREIGN KEY (ID) REFERENCES Serie (ID) ON DELETE CASCADE;
IF OBJECT_ID('dbo.PKBehaviour', 'C') IS NOT NULL ALTER TABLE dbo.Behaviour ADD CONSTRAINT PKBehaviour PRIMARY KEY (ID,ProfileName,ProgramID);
IF OBJECT_ID('dbo.FKBehaviourProfile', 'C') IS NOT NULL ALTER TABLE dbo.Behaviour ADD CONSTRAINT FKBehaviourProfile FOREIGN KEY (ProfileName,ID) REFERENCES Profile (ProfileName,ID) ON DELETE CASCADE;
IF OBJECT_ID('dbo.FKBehaviourProgram', 'C') IS NOT NULL ALTER TABLE dbo.Behaviour ADD CONSTRAINT FKBehaviourProgram FOREIGN KEY (ProgramID) REFERENCES Program (ID) ON DELETE CASCADE;
IF OBJECT_ID('dbo.FKBehaviourEpisode', 'C') IS NOT NULL ALTER TABLE dbo.Behaviour ADD CONSTRAINT FKBehaviourEpisode FOREIGN KEY (EpisodeNumber) REFERENCES Episode (EpisodeNumber);
SELECT Program.ID, Program.Title, Movie.Duration FROM Program INNER JOIN Movie ON (Program.ID = Movie.ID);
SELECT Program.ID FROM Program WHERE Program.ID='3e121bd4-a04f-4c1e-8457-6d310468e2c3';
SELECT Program.ID, Program.Title, Program.Genre FROM Program WHERE Program.ID='3e121bd4-a04f-4c1e-8457-6d310468e2c3';
SELECT Movie.AgeIndication, Movie.Duration, Movie.ID FROM Movie WHERE Movie.ID='3e121bd4-a04f-4c1e-8457-6d310468e2c3';
SELECT Program.ID FROM Program WHERE Program.ID='96537e23-5ea0-4226-bb57-4799fb7b1388';
SELECT Program.ID, Program.Title, Program.Genre FROM Program WHERE Program.ID='96537e23-5ea0-4226-bb57-4799fb7b1388';
SELECT Movie.AgeIndication, Movie.Duration, Movie.ID FROM Movie WHERE Movie.ID='96537e23-5ea0-4226-bb57-4799fb7b1388';
SELECT Program.ID, Program.Title FROM Program INNER JOIN Serie ON (Program.ID = Serie.ID);
SELECT Subscription.ID, Subscription.Name, Subscription.LastName FROM Subscription;
SELECT Subscription.Street, Subscription.HouseNumber, Subscription.Postcode, Subscription.City FROM Subscription WHERE Subscription.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db';
SELECT Subscription.Street, Subscription.HouseNumber, Subscription.Postcode, Subscription.City FROM Subscription WHERE Subscription.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db';
SELECT COUNT(*) AS count FROM Profile  WHERE Profile.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db';
SELECT Profile.ProfileName, Profile.Age, Profile.ID FROM Profile WHERE Profile.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db';
SELECT Subscription.ID FROM Subscription WHERE Subscription.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db';
UPDATE Subscription  SET Street='NULL',HouseNumber='0',Postcode='NULL',City='NULL' WHERE Subscription.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db';
SELECT Profile.ID FROM Profile WHERE Profile.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db' AND Profile.ProfileName='kids';
UPDATE Profile  SET ProfileName='kids',Age='15' WHERE Profile.ProfileName='kids' AND Profile.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db';
SELECT Subscription.Street, Subscription.HouseNumber, Subscription.Postcode, Subscription.City FROM Subscription WHERE Subscription.ID='71dea4a7-c030-4f05-aea9-96f292f7794a';
SELECT Subscription.Street, Subscription.HouseNumber, Subscription.Postcode, Subscription.City FROM Subscription WHERE Subscription.ID='71dea4a7-c030-4f05-aea9-96f292f7794a';
SELECT COUNT(*) AS count FROM Profile  WHERE Profile.ID='71dea4a7-c030-4f05-aea9-96f292f7794a';
SELECT Profile.ProfileName, Profile.Age, Profile.ID FROM Profile WHERE Profile.ID='71dea4a7-c030-4f05-aea9-96f292f7794a';
SELECT Subscription.ID FROM Subscription WHERE Subscription.ID='71dea4a7-c030-4f05-aea9-96f292f7794a';
UPDATE Subscription  SET Street='NULL',HouseNumber='0',Postcode='NULL',City='NULL' WHERE Subscription.ID='71dea4a7-c030-4f05-aea9-96f292f7794a';
SELECT Profile.ID FROM Profile WHERE Profile.ID='71dea4a7-c030-4f05-aea9-96f292f7794a' AND Profile.ProfileName='kids';
UPDATE Profile  SET ProfileName='kids',Age='15' WHERE Profile.ProfileName='kids' AND Profile.ID='71dea4a7-c030-4f05-aea9-96f292f7794a';
SELECT Behaviour.ProgramID FROM Profile INNER JOIN Behaviour ON (Profile.ProfileName = Behaviour.ProfileName) WHERE Behaviour.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db' AND Behaviour.ProfileName='kids' AND Behaviour.ProgramID='3e121bd4-a04f-4c1e-8457-6d310468e2c3';
SELECT Behaviour.ProgramID FROM Profile INNER JOIN Behaviour ON (Profile.ProfileName = Behaviour.ProfileName) WHERE Behaviour.ID='6ec4d4ff-adbd-4552-9265-0c2c48cf82db' AND Behaviour.ProfileName='kids' AND Behaviour.ProgramID='96537e23-5ea0-4226-bb57-4799fb7b1388';
SELECT Behaviour.ProgramID FROM Profile INNER JOIN Behaviour ON (Profile.ProfileName = Behaviour.ProfileName) WHERE Behaviour.ID='71dea4a7-c030-4f05-aea9-96f292f7794a' AND Behaviour.ProfileName='kids' AND Behaviour.ProgramID='3e121bd4-a04f-4c1e-8457-6d310468e2c3';
SELECT Behaviour.ProgramID FROM Profile INNER JOIN Behaviour ON (Profile.ProfileName = Behaviour.ProfileName) WHERE Behaviour.ID='71dea4a7-c030-4f05-aea9-96f292f7794a' AND Behaviour.ProfileName='kids' AND Behaviour.ProgramID='96537e23-5ea0-4226-bb57-4799fb7b1388';
